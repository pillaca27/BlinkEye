package com.royal.servicio;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;

import com.royal.dominio.Parametrosmast;
import com.royal.dominio.ParametrosmastPk;
import com.royal.genericos.GenericoServicioValidar;
import com.royal.util.DominioMensajeUsuario;
import com.royal.util.SeguridadUsuarioActual;

public class ParametrosmastValidarImpl extends GenericoServicioValidar {

	private List<DominioMensajeUsuario> coreBasico(SeguridadUsuarioActual usuarioActual,
			Parametrosmast parametrosmast) {

		List<DominioMensajeUsuario> lst = new ArrayList<DominioMensajeUsuario>();
		if (usuarioActual == null)
			lst.add(this.getMsjUsuarioError(SeguridadUsuarioActual.CONSTRAINTS_NOTNULL));
		if (parametrosmast == null)
			lst.add(this.getMsjUsuarioError("El objeto enviado es nulo"));
		if (!lst.isEmpty())
			return lst;
		Validator validator = Validation.buildDefaultValidatorFactory().getValidator();
		if (parametrosmast.getPk() != null) {
			Set<ConstraintViolation<ParametrosmastPk>> reglasPk = validator.validate(parametrosmast.getPk());
			for (ConstraintViolation constraint : reglasPk) {
				lst.add(this.getMsjUsuarioError(constraint));
			}
		}
		Set<ConstraintViolation<Parametrosmast>> reglas = validator.validate(parametrosmast);
		for (ConstraintViolation constraint : reglas) {
			lst.add(this.getMsjUsuarioError(constraint));
		}
		
		return lst;

	}
}
