<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * @author : desarrollo
 * @powerbuilder : core.Departamento
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="departamento.obtenerDto">
         select 
			rtrim(Departamento) "departamento"
			,RTRIM(DescripcionCorta) "descripcioncorta"
			,DescripcionLarga "descripcionlarga"
			,Pais "pais"
			 ,cast(Estado as varchar) as "estado"
			,UltimoUsuario "ultimousuario"
			,UltimaFechaModif "ultimafechamodif"
			
         from DEPARTAMENTO
         where 
			Departamento = :p_departamento

    </sql-query>

    <sql-query name="departamento.obtenerDtoProvincia">
         select 
			rtrim(Departamento) "departamento"
			,rtrim(Provincia) "provincia"
			,RTRIM(DescripcionCorta) "descripcioncorta"
			,DescripcionLarga "descripcionlarga"
			 ,cast(Estado as varchar) as "estado"
			,UltimaFechaModif "ultimafechamodif"
			,UltimoUsuario "ultimousuario"
			,cast ('A' as varchar) as accion
			,cast(PAIS as varchar) "pais"
         from PROVINCIA
         where 
			Departamento = :p_departamento

    </sql-query>
    
        <sql-query name="departamento.obtenerDtoZonaPostal">
        select 
			rtrim(Departamento) "departamento"
			,rtrim(Provincia) "provincia"
			,rtrim(CodigoPostal) "codigopostal"
			,RTRIM(DescripcionCorta) "descripcioncorta"
			,DescripcionLarga "descripcionlarga"
			 ,cast(Estado as varchar) as "estado"
			,UltimaFechaModif "ultimafechamodif"
			,UltimoUsuario "ultimousuario"
			,cast ('A' as varchar) as accion
			,cast(PAIS as varchar) "pais"
			,cast(UBIGEO as varchar) "ubigeo"
         from ZONAPOSTAL
         where 
			Departamento = :p_departamento and Provincia = :p_provincia

    </sql-query>
    
    <sql-query name="departamento.listarPaginadoContar">
         SELECT COUNT(1)
    FROM Departamento,   
         Provincia  
   WHERE ( Provincia.Departamento = Departamento.Departamento )  
and
			UPPER(ISNULL(Departamento.DescripcionCorta,'A')) like '%' + ISNULL(:p_departamento,UPPER(Departamento.DescripcionCorta)) + '%' 
    </sql-query>

    <sql-query name="departamento.listarPaginadoSentencia">
    SELECT Departamento.Departamento as  "departamento",   
         Departamento.DescripcionCorta as "descripcioncorta",   
         Provincia.Provincia as "pais",   
         Provincia.DescripcionCorta as "descripcionlarga",   
         cast(Provincia.Estado as varchar) as "estado",
         case when cast(Provincia.Estado as varchar(1)) = 'A' THEN 'Activo' else
		'Inactivo' end AS "estadodescripcion"
    FROM Departamento,   
         Provincia  
   WHERE ( Provincia.Departamento = Departamento.Departamento )  
and
			UPPER(ISNULL(Departamento.DescripcionCorta,'A')) like '%' + ISNULL(:p_departamento,UPPER(Departamento.DescripcionCorta)) + '%'

    </sql-query>

    <sql-query name="departamento.listarDtoCore">
         select 
			Departamento "departamento"
			,DescripcionCorta "descripcioncorta"
			,DescripcionLarga "descripcionlarga"
			,Pais "pais"
			,Estado "estado"
			,UltimoUsuario "ultimousuario"
			,UltimaFechaModif "ultimafechamodif"

         from DEPARTAMENTO
         where 
			Departamento = ISNULL(:p_departamento, Departamento)
			Departamento = ISNULL(:p_departamento, Departamento)

    </sql-query>

    <sql-query name="departamento.listar">
         select 
             'codigo' AS "codigo"
             ,'nombre' AS "nombre"
             ,'estadoid' AS "estadoId"
         from dual
    </sql-query>

    <sql-query name="departamento.listarActivos">
         select 
             'codigo' AS "codigo"
             ,'nombre' AS "nombre"
             ,'estadoid' AS "estadoId"
         from dual
    </sql-query>

<!--
	LEONARDO
	COPIADO DEPARTAMENTO COMUN
	 
 -->
 <sql-query name="departamento.contarubicaciongeografica">
  <![CDATA[
    select count(*)
    from Departamento dep inner join Provincia pro
    on dep.Departamento = pro.Departamento
    inner join ZonaPostal pos on dep.Departamento = pos.Departamento
    and pro.Provincia = pos.Provincia
    where dep.Pais = :p_pais and dep.Estado = 'A' and pro.Estado = 'A' and pos.Estado = 'A'
    and dep.DescripcionCorta like '%' + ISNULL(:p_departamento, dep.DescripcionCorta) + '%'
    and pro.DescripcionCorta like '%' + ISNULL(:p_provincia, pro.DescripcionCorta) + '%'
    and pos.DescripcionCorta like '%' + ISNULL(:p_distrito, pos.DescripcionCorta) + '%'
	]]>
  </sql-query>
  
  
  <sql-query name="departamento.listarubicaciongeografica">
  <![CDATA[
    select 
    rtrim(dep.Departamento) as "departamento", 
    rtrim(pro.Provincia) as "provincia", 
    rtrim(pos.CodigoPostal) as "zonapostal",
    (RTRIM(dep.DescripcionCorta) + '-' + RTRIM(pro.DescripcionCorta) + '-' + RTRIM(pos.DescripcionCorta)) as "descripcion",
    (rtrim(dep.Departamento) + rtrim(pro.Provincia) + rtrim(pos.CodigoPostal)) as "codigoelemento"
    from Departamento dep inner join Provincia pro
    on dep.Departamento = pro.Departamento
    inner join ZonaPostal pos on dep.Departamento = pos.Departamento
    and pro.Provincia = pos.Provincia
    where dep.Pais = :p_pais and dep.Estado = 'A' and pro.Estado = 'A' and pos.Estado = 'A'
    and dep.DescripcionCorta like '%' + ISNULL(UPPER(:p_departamento), dep.DescripcionCorta) + '%'
    and pro.DescripcionCorta like '%' + ISNULL(UPPER(:p_provincia), pro.DescripcionCorta) + '%'
    and pos.DescripcionCorta like '%' + ISNULL(UPPER(:p_distrito), pos.DescripcionCorta) + '%'
    ORDER BY dep.DescripcionCorta ASC
    ]]>
  </sql-query>
</hibernate-mapping>
