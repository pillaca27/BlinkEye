<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * @author : desarrollo
 * @powerbuilder : sistema.SyTareaLog
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="sytarealog.obtenerDto">
         select 
			a.TAREA_LOG_ID "tareaLogId"
			,a.TAREA_ID "tareaId"
			,a.UUID "uuid"
			,a.NOMBRE "nombre"
			,a.PARAMETROS "parametros"
			,a.OBSERVACIONES "observaciones"
			,a.OBSERVACIONES_HTML "observacionesHtml"
			,a.SOLICITANTE_ID "solicitanteId"
			,a.REFERENCIA "referencia"
			,a.REFERENCIA_PADRE "referenciaPadre"
			,a.ESTADO "estado"
			,a.CREACION_USUARIO "creacionUsuario"
			,a.CREACION_FECHA "creacionFecha"
			,a.MODIFICACION_USUARIO "modificacionUsuario"
			,a.MODIFICACION_FECHA "modificacionFecha"
			,a.fecha_Ejecucion "fechaEjecucion"

         from SY_TAREA_LOG a
         where 
			a.TAREA_LOG_ID = :p_tarealogid

    </sql-query>

    <sql-query name="sytarealog.listarPaginadoContar">
         select count(1)
         from SY_TAREA_LOG a
         where 
			a.TAREA_LOG_ID = ISNULL(:p_tarealogid, a.TAREA_LOG_ID)
			AND a.NOMBRE like '%' + ISNULL(:p_nombre, a.NOMBRE) + '%' 
			AND a.ESTADO = ISNULL(:p_estado, a.ESTADO)

    </sql-query>

    <sql-query name="sytarealog.listarPaginadoSentencia">
         select 
			a.TAREA_LOG_ID "tareaLogId"
			,a.TAREA_ID "tareaId"
			,a.UUID "uuid"
			,a.NOMBRE "nombre"
			,a.PARAMETROS "parametros"
			,a.OBSERVACIONES "observaciones"
			,a.OBSERVACIONES_HTML "observacionesHtml"
			,a.SOLICITANTE_ID "solicitanteId"
			,a.REFERENCIA "referencia"
			,a.REFERENCIA_PADRE "referenciaPadre"
			,a.ESTADO "estado"
			,a.CREACION_USUARIO "creacionUsuario"
			,a.CREACION_FECHA "creacionFecha"
			,a.MODIFICACION_USUARIO "modificacionUsuario"
			,a.MODIFICACION_FECHA "modificacionFecha"
			,a.fecha_Ejecucion "fechaEjecucion"
			
         from SY_TAREA_LOG a
         where 
			a.TAREA_LOG_ID = ISNULL(:p_tarealogid, a.TAREA_LOG_ID)
			AND a.NOMBRE like '%' + ISNULL(:p_nombre, a.NOMBRE) + '%' 
			AND a.ESTADO = ISNULL(:p_estado, a.ESTADO)

    </sql-query>

    <sql-query name="sytarealog.listarDtoCore">
         select 
			a.TAREA_LOG_ID "tareaLogId"
			,a.TAREA_ID "tareaId"
			,a.UUID "uuid"
			,a.NOMBRE "nombre"
			,a.PARAMETROS "parametros"
			,a.OBSERVACIONES "observaciones"
			,a.OBSERVACIONES_HTML "observacionesHtml"
			,a.SOLICITANTE_ID "solicitanteId"
			,a.REFERENCIA "referencia"
			,a.REFERENCIA_PADRE "referenciaPadre"
			,a.ESTADO "estado"
			,a.CREACION_USUARIO "creacionUsuario"
			,a.CREACION_FECHA "creacionFecha"
			,a.MODIFICACION_USUARIO "modificacionUsuario"
			,a.MODIFICACION_FECHA "modificacionFecha"
			,a.fecha_Ejecucion "fechaEjecucion"
			
         from SY_TAREA_LOG a
         where 
			a.TAREA_LOG_ID = ISNULL(:p_tarealogid, a.TAREA_LOG_ID)
			AND a.NOMBRE like '%' + ISNULL(:p_nombre, a.NOMBRE) + '%' 
			AND a.ESTADO = ISNULL(:p_estado, a.ESTADO)

    </sql-query>

    <sql-query name="sytarealog.listar">
         select 
             'codigo' AS "codigo"
             ,'nombre' AS "nombre"
             ,'estadoid' AS "estadoId"
         from dual
    </sql-query>

    <sql-query name="sytarealog.listarActivos">
         select 
             'codigo' AS "codigo"
             ,'nombre' AS "nombre"
             ,'estadoid' AS "estadoId"
         from dual
    </sql-query>

    <sql-query name="sytarealog.listaCortaPorNombre">
         select 
             'codigo' AS "codigo"
             ,'nombre' AS "nombre"
             ,'estadoid' AS "estadoId"
         from dual
         limit 15
    </sql-query>

</hibernate-mapping>
