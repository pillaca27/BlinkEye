<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * @author : desarrollo
 * @powerbuilder : rrhh.HrPuestoempresa
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>   
   <sql-query name="hrpuestoempresa.listar">
    <![CDATA[   
        select CodigoPuesto as "id", Descripcion as "nombre" , estado as "estadoId"
        from Hr_Puestoempresa
        order by Descripcion
    ]]>
  </sql-query>
  <sql-query name="hrpuestoempresa.listarActivos">
    <![CDATA[   
        select CodigoPuesto as "id", Descripcion as "nombre"
        , estado as "estadoId"
        from Hr_Puestoempresa
        where Estado = 'A'
        order by Descripcion
    ]]>
  </sql-query>
  <sql-query name="hrpuestoempresa.obtenertabla">
    <![CDATA[   
        select CodigoPuesto as "id", Descripcion as "nombre"
        , estado as "estadoId"
        from Hr_Puestoempresa
        where CodigoPuesto = :p_codigopuesto
    ]]>
  </sql-query>
  
    <sql-query name="hrpuestoempresa.obtenerdto">
         select CodigoPuesto as "codigopuesto"
			,GradoSalario as "gradosalario"
			,Descripcion as "descripcion"
			,Estado as "estado"
		from Hr_Puestoempresa
		where CodigoPuesto=:p_codigopuesto
    </sql-query>
    
    <sql-query name="hrpuestoempresa.listardtofiltros">
	    <![CDATA[
		SELECT 	HR_PuestoEmpresa.CodigoPuesto as "codigopuesto",   
					HR_PuestoEmpresa.Descripcion as "descripcion",    
					HR_PuestoEmpresa.Estado as "estado",
					HR_PuestoEmpresa.CodigoCAP as "codigocap",
					HR_PuestoEmpresa.DescripcionCAP as "descripcioncap", 
					HR_PuestoEmpresa.Categoriafuncional as "categoriafuncional", 
					HR_PuestoEmpresa.GradoSalario as "gradosalario"
		FROM 	HR_PuestoEmpresa 
		WHERE HR_PuestoEmpresa.CodigoPuesto = ISNULL(:p_codigopuesto, HR_PuestoEmpresa.CodigoPuesto)
		AND HR_PuestoEmpresa.Descripcion like '%' || ISNULL(UPPER(:p_descripcion), HR_PuestoEmpresa.Descripcion)  || '%'
		AND HR_PuestoEmpresa.estado = ISNULL(:p_estado,HR_PuestoEmpresa.estado)
		ORDER BY HR_PuestoEmpresa.Descripcion
	    ]]>
  	</sql-query>
    
    <sql-query name="hrpuestoempresa.listardto">
         select CodigoPuesto as "codigopuesto"
			,GradoSalario as "gradosalario"
			,Descripcion as "descripcion"
			,Estado as "estado"
		from Hr_Puestoempresa
		order by Descripcion
    </sql-query>
    
    <sql-query name="hrpuestoempresa.listardtoactivos">
         select CodigoPuesto as "codigopuesto"
			,GradoSalario as "gradosalario"
			,Descripcion as "descripcion"
			,Estado as "estado"
		from Hr_Puestoempresa
		where Estado='A'
		order by Descripcion
    </sql-query>
    
    <sql-query name="hrpuestoempresa.solicitudContarHrPuestoEmpresa">
	    <![CDATA[
		    SELECT 	COUNT(*)
			FROM 	HR_PuestoEmpresa 
			WHERE HR_PuestoEmpresa.CodigoPuesto = ISNULL(:p_codigo, HR_PuestoEmpresa.CodigoPuesto)
			AND HR_PuestoEmpresa.Descripcion like '%' + ISNULL(UPPER(:p_descripcion), HR_PuestoEmpresa.Descripcion)  + '%'
			AND HR_PuestoEmpresa.estado = ISNULL(:p_estado,HR_PuestoEmpresa.estado)
	    ]]>
  	</sql-query>
    
    <sql-query name="hrpuestoempresa.solicitudListarHrPuestoEmpresa">
	    <![CDATA[
		SELECT 	HR_PuestoEmpresa.CodigoPuesto as "codigopuesto",   
					HR_PuestoEmpresa.Descripcion as "descripcion",    
					CAST(HR_PuestoEmpresa.Estado AS VARCHAR(1)) as "estado",
					HR_PuestoEmpresa.CodigoCAP as "codigocap",
					HR_PuestoEmpresa.DescripcionCAP as "descripcioncap", 
					HR_PuestoEmpresa.Categoriafuncional as "categoriafuncional", 
					HR_PuestoEmpresa.GradoSalario as "gradosalario"
		FROM 	HR_PuestoEmpresa 
		WHERE HR_PuestoEmpresa.CodigoPuesto = ISNULL(:p_codigo, HR_PuestoEmpresa.CodigoPuesto)
		AND HR_PuestoEmpresa.Descripcion like '%' + ISNULL(UPPER(:p_descripcion), HR_PuestoEmpresa.Descripcion)  + '%'
		AND HR_PuestoEmpresa.estado = ISNULL(:p_estado,HR_PuestoEmpresa.estado)
		ORDER BY HR_PuestoEmpresa.Descripcion
	    ]]>
  	</sql-query>
  	
    <sql-query name="hrpuestoempresa.contarpuestoporfiltro">
	    <![CDATA[
	SELECT  
	COUNT(*)
FROM HR_PUESTOEMPRESA A
LEFT JOIN HR_CARGOSMAST B ON A.CATEGORIAFUNCIONAL = B.CARGO
LEFT JOIN HR_GRADOSALARIOMAST C ON A.GRADOSALARIO = C.GRADOSALARIO
WHERE 1 = 1 AND CODIGOPUESTO IN(SELECT CODIGO FROM HR_ORGANIGRAMA 
								WHERE COMPANYOWNER = :p_companyowner --'01000000' 
								AND UNIDADNEGOCIO = :p_unidadnegocio --'D3F@' 
								AND ANO = :p_anio --2022 
								AND SECUENCIA = :p_secuencia --8 
								AND TIPO = '2') 
AND (ISNULL(:p_codigopuesto, 0) = 0 OR A.CodigoPuesto  = :p_codigopuesto)
AND (ISNULL(:p_descripcion, '-') = '-' OR A.Descripcion LIKE '%'+isnull(:p_descripcion, A.Descripcion)+'%')	
 	    ]]>
  	</sql-query> 	
  	
    <sql-query name="hrpuestoempresa.listarpuestoporfiltro">
	    <![CDATA[
SELECT A.CODIGOPUESTO AS codigopuesto, 
UPPER(A.DESCRIPCION) AS descripcion,
A.DESCRIPCION AS descripciondesc, 
A.CODIGOCAP AS codigocap,
A.TIEMPORECLUTAR AS tiemporeclutar,
A.PESO AS peso,
CAST(A.ESTADO AS VARCHAR) AS estado,
CAST(A.CATEGORIAFUNCIONAL AS VARCHAR) AS categoriafuncional,
LTRIM(RTRIM(UPPER(B.DESCRIPCIONLOCAL))) AS categorianombre, 
CAST(A.GRADOSALARIO AS VARCHAR) AS gradosalario,
LTRIM(RTRIM(UPPER(C.DESCRIPCIONLOCAL))) AS gradosalarionombre, 
0 AS unidadorganigrama,
'' AS unidadorganigramanombre,
isnull(SalarioMinimo, 0.0) as "salariominimo"
FROM HR_PUESTOEMPRESA A
LEFT JOIN HR_CARGOSMAST B ON A.CATEGORIAFUNCIONAL = B.CARGO
LEFT JOIN HR_GRADOSALARIOMAST C ON A.GRADOSALARIO = C.GRADOSALARIO
WHERE 1 = 1 AND CODIGOPUESTO IN(SELECT CODIGO FROM HR_ORGANIGRAMA 
								WHERE COMPANYOWNER = :p_companyowner --'01000000' 
								AND UNIDADNEGOCIO = :p_unidadnegocio --'D3F@' 
								AND ANO = :p_anio --2022 
								AND SECUENCIA = :p_secuencia --8 
								AND TIPO = '2')
AND (ISNULL(:p_codigopuesto, 0) = 0 OR A.CodigoPuesto  = :p_codigopuesto)
AND (ISNULL(:p_descripcion, '-') = '-' OR A.Descripcion LIKE '%'+isnull(:p_descripcion, A.Descripcion)+'%')	
 	    ]]>
  	</sql-query> 	
  	
    <sql-query name="hrpuestoempresa.contarHr_organigramaPorFiltros">
	    <![CDATA[  	
		SELECT COUNT(1) 
		FROM HR_ORGANIGRAMA 
		WHERE COMPANYOWNER = :p_companyowner 
			AND UNIDADNEGOCIO = :p_unidadnegocio 
			AND ANO = :p_anio 
			AND SECUENCIA = :p_secuencia 
			AND CODIGO = :p_puestotemporal
			AND TIPO = '2'  	
  	 	    ]]>
  	</sql-query> 	  	
  	  	
    <sql-query name="hrpuestoempresa.contarHr_organigrama_previoPorFiltros">
	    <![CDATA[  	
		SELECT COUNT(1) 
		FROM HR_ORGANIGRAMA_PREVIO 
		WHERE COMPANYOWNER = :p_compania 
			AND UNIDADNEGOCIO = :p_unidadnegocio 
			AND ANO = :p_anio 
			AND SECUENCIA = :p_secuencia 
			AND CODIGO = :p_puestotemporal 
			AND TIPO = '2'
  	 	    ]]>
  	</sql-query> 
  	
  	<sql-query name="hrpuestoempresa.listarUnidades">
	    <![CDATA[  	
		
		declare @i_comp varchar(20) = :p_companyowner
		declare @i_uni varchar(20) = :p_unidadnegocio
		declare @i_ano int = :p_anio
		declare @i_sec int = :p_secuencia
		declare @i_pue int = :p_puestotemporal
		
		SELECT
		b.Codigo as "id",
		c.Descripcion as "descripcion",
		a.Orden as "codigo",
		c.CentroCostos as "estadoId",
		d.LocalName as "nombre"
		FROM HR_ORGANIGRAMA a
		left join HR_ORGANIGRAMA b on 
		b.COMPANYOWNER = @i_comp
		AND b.UNIDADNEGOCIO = @i_uni
		AND b.ANO = @i_ano 
		AND b.SECUENCIA = @i_sec
		AND b.TIPO = '1'
		and a.Orden like b.Orden + '.____'
		left join HR_POSICIONEMPRESA c on c.CODIGOPOSICION = b.CodigO AND B.COMPANYOWNER = c.COMPANYOWNER
		left join AC_CostCenterMst d on d.CostCenter =c.CentroCostos
		WHERE 
		a.COMPANYOWNER = @i_comp
		AND a.UNIDADNEGOCIO = @i_uni
		AND a.ANO = @i_ano 
		AND a.SECUENCIA = @i_sec
		AND a.CODIGO = @i_pue
		AND a.TIPO = '2'  	

  	 	    ]]>
  	</sql-query> 	  	
    	  	
    <sql-query name="hrpuestoempresa.listarorganigramaprevio">
	    <![CDATA[  	
SELECT 
CAST(A.COMPANYOWNER AS VARCHAR) AS companyowner,
A.ANO AS ano,
CAST(A.UNIDADNEGOCIO AS VARCHAR) AS unidadnegocio,
A.SECUENCIA AS secuencia,
CAST(A.TIPO AS VARCHAR) AS tipo,
A.CODIGO AS codigo,
CASE 
	WHEN A.TIPO = '1' THEN LTRIM(RTRIM(B.DESCRIPCION))
	ELSE LTRIM(RTRIM(C.DESCRIPCION))
END AS codigonombre,
CAST(CASE 
	WHEN A.TIPO = '1' THEN B.ESTADO
	ELSE C.ESTADO
END AS VARCHAR) AS estado,
CASE 
	WHEN A.TIPO = '1' THEN LTRIM(RTRIM(B.CENTROCOSTOS))
	ELSE ''
END AS centrocosto,
CASE 
	WHEN A.TIPO = '1' THEN
		(	SELECT COUNT(1) 
			FROM HR_ORGANIGRAMA_PUESTOS_PREVIO AA 
			WHERE AA.COMPANYOWNER = A.COMPANYOWNER 
				AND AA.ANO = A.ANO 
				AND AA.UNIDADNEGOCIO = A.UNIDADNEGOCIO 
				AND AA.SECUENCIA = A.SECUENCIA 
				AND SUBSTRING(ORDEN, 1, LEN(ORDEN) - 5) LIKE A.ORDEN + '%')
	ELSE
		(	SELECT COUNT(1) 
			FROM HR_ORGANIGRAMA_PUESTOS_PREVIO AA 
			WHERE AA.COMPANYOWNER = A.COMPANYOWNER 
				AND AA.ANO = A.ANO 
				AND AA.UNIDADNEGOCIO = A.UNIDADNEGOCIO 
				AND AA.SECUENCIA = A.SECUENCIA 
				AND ORDEN = A.ORDEN)
END AS empleados,
A.ORDEN AS orden,
CAST(ISNULL(A.PRINCIPAL,'N') AS VARCHAR) AS principal,
A.NUMEROESTANDAR AS numeroestandar,
CAST(A.RAIZ AS VARCHAR) AS raiz,
CASE 
	WHEN A.TIPO = '1' THEN B.CODIGOTIPO
	ELSE 0
END AS codigotipo,
LTRIM(RTRIM(D.DESCRIPCION)) AS codigotiponombre,
D.ORDEN AS tipoposicionorden
FROM HR_ORGANIGRAMA_PREVIO A
LEFT JOIN HR_POSICIONEMPRESA B ON B.CODIGOPOSICION = A.CODIGO AND B.COMPANYOWNER = A.COMPANYOWNER AND A.TIPO = '1'
LEFT JOIN HR_PUESTOEMPRESA C ON C.CODIGOPUESTO = A.CODIGO AND A.TIPO = '2'
LEFT JOIN HR_TIPOPOSICION D ON D.CODIGOTIPO = B.CODIGOTIPO
WHERE A.COMPANYOWNER = :p_companyowner
	AND A.ANO = :p_anio
	AND A.UNIDADNEGOCIO = :p_unidadnegocio
	AND A.SECUENCIA = :p_secuencia
	AND :p_evento = 'Update'
	AND A.ORDEN <> '0000'
	
UNION

SELECT 
CAST(A.COMPANYOWNER AS VARCHAR) AS companyowner,
A.ANO AS ano,
CAST(A.UNIDADNEGOCIO AS VARCHAR) AS unidadnegocio,
A.SECUENCIA AS secuencia,
CAST(A.TIPO AS VARCHAR) AS tipo,
A.CODIGO AS codigo,
CASE 
	WHEN A.TIPO = '1' THEN LTRIM(RTRIM(B.DESCRIPCION))
	ELSE LTRIM(RTRIM(C.DESCRIPCION))
END AS codigonombre,
CAST(CASE 
	WHEN A.TIPO = '1' THEN B.ESTADO
	ELSE C.ESTADO
END AS VARCHAR) AS estado,
CASE 
	WHEN A.TIPO = '1' THEN LTRIM(RTRIM(B.CENTROCOSTOS))
	ELSE ''
END AS centrocosto,
CASE WHEN A.TIPO = '1' THEN
	(	SELECT COUNT(1) 
		FROM HR_ORGANIGRAMA_PUESTOS AA 
		WHERE AA.COMPANYOWNER = A.COMPANYOWNER 
			AND AA.ANO = A.ANO 
			AND AA.UNIDADNEGOCIO = A.UNIDADNEGOCIO 
			AND AA.SECUENCIA = A.SECUENCIA 
			AND SUBSTRING(ORDEN, 1, LEN(ORDEN) - 5) LIKE A.ORDEN + '%')
ELSE
	(	SELECT COUNT(1) 
		FROM HR_ORGANIGRAMA_PUESTOS AA 
		WHERE AA.COMPANYOWNER = A.COMPANYOWNER 
			AND AA.ANO = A.ANO 
			AND AA.UNIDADNEGOCIO = A.UNIDADNEGOCIO 
			AND AA.SECUENCIA = A.SECUENCIA 
			AND ORDEN = A.ORDEN)
END AS empleados,
A.ORDEN AS orden,
CAST(ISNULL(A.PRINCIPAL,'N') AS VARCHAR) AS principal,
A.NUMEROESTANDAR AS numeroestandar,
CAST('' AS VARCHAR) AS raiz,
CASE 
	WHEN A.TIPO = '1' THEN B.CODIGOTIPO
	ELSE 0
END AS codigotipo,
LTRIM(RTRIM(D.DESCRIPCION)) AS codigotiponombre,
D.ORDEN AS tipoposicionorden
FROM HR_ORGANIGRAMA_HIST_DET A
LEFT JOIN HR_POSICIONEMPRESA B ON B.CODIGOPOSICION = A.CODIGO AND B.COMPANYOWNER = A.COMPANYOWNER AND A.TIPO = '1'
LEFT JOIN HR_PUESTOEMPRESA C ON C.CODIGOPUESTO = A.CODIGO AND A.TIPO = '2'
LEFT JOIN HR_TIPOPOSICION D ON D.CODIGOTIPO = B.CODIGOTIPO
WHERE A.COMPANYOWNER = :p_companyowner
	AND A.ANO = :p_anio
	AND A.UNIDADNEGOCIO = :p_unidadnegocio
	AND A.SECUENCIA = :p_secuencia
	AND ( :p_evento = 'Browse' OR :p_evento = 'UpdateBrowse' )
	AND A.ORDEN <> '0000'
    	]]>
  	</sql-query> 	  	
  	  	
</hibernate-mapping>
