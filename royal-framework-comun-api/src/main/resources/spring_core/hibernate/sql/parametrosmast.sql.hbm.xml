<?xml version="1.0" encoding="UTF-8"?>
<!--
 *
 * @author : desarrollo
 * @powerbuilder : core.Parametrosmast
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <sql-query name="parametrosmast.obtenerDtoPorId">
         select 
			COMPANIACODIGO "companiacodigo"
			,APLICACIONCODIGO "aplicacioncodigo"
			,PARAMETROCLAVE "parametroclave"
			,DESCRIPCIONPARAMETRO "descripcionparametro"
			,EXPLICACION "explicacion"
			,cast(TIPODEDATOFLAG as varchar(1)) as  "tipodedatoflag"
			,TEXTO "texto"
			,NUMERO "numero"
			,FECHA "fecha"
			,cast(FINANCECOMUNFLAG as varchar(1)) as  "financecomunflag"
			,cast(ESTADO as varchar(1)) as  "estado"
			,ULTIMOUSUARIO "ultimousuario"
			,ULTIMAFECHAMODIF "ultimafechamodif"
			,EXPLICACIONADICIONAL "explicacionadicional"

         from PARAMETROSMAST
         where 
			COMPANIACODIGO = :p_companiacodigo
			AND APLICACIONCODIGO = :p_aplicacioncodigo
			AND PARAMETROCLAVE = :p_parametroclave

    </sql-query>

    <sql-query name="parametrosmast.listarPaginadoContar">
         select count(1)
         from PARAMETROSMAST
                      where 
                UPPER(ISNULL(COMPANIACODIGO,'xxx')) like '%' + ISNULL(:p_companiacodigo,UPPER(COMPANIACODIGO)) + '%'
			 and UPPER(ISNULL(APLICACIONCODIGO,'xxx')) like '%' + ISNULL(:p_aplicacioncodigo,UPPER(APLICACIONCODIGO)) + '%'
             and UPPER(ISNULL(PARAMETROCLAVE,'xxx')) like '%' + ISNULL(:p_parametroclave,UPPER(PARAMETROCLAVE)) + '%'  
             and UPPER(ISNULL(DESCRIPCIONPARAMETRO,'xxx')) like '%' + ISNULL(:p_desc,UPPER(DESCRIPCIONPARAMETRO)) + '%' 
             and ESTADO = isnull(:p_estado,ESTADO)  
    </sql-query>

    <sql-query name="parametrosmast.listarPaginadoSentencia">
select 
			COMPANIACODIGO "companiacodigo"
			,APLICACIONCODIGO "aplicacioncodigo"
			,rtrim(PARAMETROCLAVE) "parametroclave"
			,DESCRIPCIONPARAMETRO "descripcionparametro"
			,EXPLICACION "explicacion"
			,cast(TIPODEDATOFLAG as varchar(1)) as  "tipodedatoflag"
			,TEXTO "texto"
			,NUMERO "numero"
			,FECHA "fecha"
			,cast(FINANCECOMUNFLAG as varchar(1)) as  "financecomunflag"
			,cast(ESTADO as varchar(1)) as  "estado"
			,ULTIMOUSUARIO "ultimousuario"
			,ULTIMAFECHAMODIF "ultimafechamodif"
			,EXPLICACIONADICIONAL "explicacionadicional"
			, case when cast(ESTADO as varchar(1)) = 'A' THEN 'Activo' else
			'Inactivo' end AS "estadodescripcion"
			,case when cast(TIPODEDATOFLAG as varchar(1)) = 'T' THEN 'Texto'
			when cast(TIPODEDATOFLAG as varchar(1)) = 'N' THEN 'NÃºmero'
			else 'Fecha' end AS "tipovalordescripcion"
			,case when cast(TIPODEDATOFLAG as varchar(1)) = 'T' THEN TEXTO
			when cast(TIPODEDATOFLAG as varchar(1)) = 'N' THEN convert(varchar,NUMERO)
			else  convert(varchar(10), FECHA, 103) end AS "valordescripcion"
         from PARAMETROSMAST
             where 
			 UPPER(ISNULL(COMPANIACODIGO,'xxx')) like '%' + ISNULL(:p_companiacodigo,UPPER(COMPANIACODIGO)) + '%'
			 and UPPER(ISNULL(APLICACIONCODIGO,'xxx')) like '%' + ISNULL(:p_aplicacioncodigo,UPPER(APLICACIONCODIGO)) + '%'
             and UPPER(ISNULL(PARAMETROCLAVE,'xxx')) like '%' + ISNULL(:p_parametroclave,UPPER(PARAMETROCLAVE)) + '%'  
             and UPPER(ISNULL(DESCRIPCIONPARAMETRO,'xxx')) like '%' + ISNULL(:p_desc,UPPER(DESCRIPCIONPARAMETRO)) + '%' 
             and ESTADO = isnull(:p_estado,ESTADO)  
             
             ORDER BY AplicacionCodigo ASC,   
         ParametroClave ASC,   
         CompaniaCodigo ASC   
    </sql-query>
    
  	
  	<sql-query name="parametrosmast.obtenerParametroCorreo">
	<![CDATA[
		SELECT  P.PARAMETROCLAVE as "codigo" 
        ,P.EXPLICACION as "nombre"
    	FROM PARAMETROSMAST P 
    	WHERE P.PARAMETROCLAVE IN ('RUTAADJUN','MAILCLAVE','MAILCUENTA','MAILENV','MAILFLGPRU','MAILFLGSSL','MAILHOST','MAILPUERTO','MAILASINC','MAILPRUEBA','MAILRUTATM','MAIFLGCRED','TRACEFLG', 'MAILREMITE','MAICOPIOCU') 
	]]>		
	</sql-query>
	
	<sql-query name="parametrosmast.obtenerParametroExplicacion">
    	select Explicacion as "descripcion" 
    	from ParametrosMast
    	where AplicacionCodigo = :p_aplicacion 
    		and ParametroClave = :p_parametro
  	</sql-query>
  	
  	
  		<sql-query name="parametrosmast.obtenerparametro">
	<![CDATA[
	
	
	select texto as "texto"
	from PARAMETROSMAST where
	 aplicacioncodigo=:p_aplicacioncodigo
	  and
	   parametroclave=:p_parametroclave
	
  	
  	]]>		
	</sql-query>
  	
  	
  	
</hibernate-mapping>
