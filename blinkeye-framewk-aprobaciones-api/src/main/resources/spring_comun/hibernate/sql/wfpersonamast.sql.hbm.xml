<?xml version="1.0" encoding="UTF-8"?>
<!-- * * @author : desarrollo * @powerbuilder : asistencia.AsArea -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<sql-query name="wfpersonamast.obtenerdto">
       
select 
			 persona as "persona"
			,CAST(ORIGEN as varchar(4)) "origen"
			,APELLIDOPATERNO "apellidopaterno"
			,APELLIDOMATERNO "apellidomaterno"
			,NOMBRES "nombres"
			,NOMBRECOMPLETO "nombrecompleto"
			,BUSQUEDA "busqueda"
			,CAST(TIPODOCUMENTO as varchar(1)) "tipodocumento"
			,CAST(DOCUMENTO as varchar(20)) "documento"
			,CAST(CODIGOBARRAS as varchar(18)) "codigobarras"
			,CAST(TIPOPERSONAUSUARIO as varchar(3)) "tipopersonausuario"
			,CAST(ESCLIENTE as varchar(1)) "escliente"
			,CAST(ESPROVEEDOR as varchar(1)) "esproveedor"
			,CAST(ESEMPLEADO  as varchar(1))"esempleado"
			,CAST(ESOTRO as varchar(1)) "esotro"
			,CAST(TIPOPERSONA as varchar(1))  "tipopersona"
			,FECHANACIMIENTO "fechanacimiento"
			,CAST(CIUDADNACIMIENTO as varchar(20)) "ciudadnacimiento"
			,CAST(SEXO as varchar(1)) "sexo"
			,CAST(NACIONALIDAD as varchar(20)) "nacionalidad"
			,CAST(ESTADOCIVIL as varchar(1)) "estadocivil"
			,CAST(NIVELINSTRUCCION as varchar(3)) "nivelinstruccion"
			,DIRECCION "direccion"
			,CAST(CODIGOPOSTAL as varchar(3)) "codigopostal"
			,CAST(DEPARTAMENTO as varchar(3)) "departamento"
			,TELEFONO "telefono"
			,FAX "fax"
			,CAST(DOCUMENTOFISCAL as varchar(20)) "documentofiscal"
			,CAST(DOCUMENTOIDENTIDAD as varchar(20)) "documentoidentidad"
			,CAST(CARNETEXTRANJERIA as varchar(10)) "carnetextranjeria"
			,CAST(DOCUMENTOMILITARFA as varchar(15)) "documentomilitarfa"
			,CAST(TIPOBREVETE as varchar(1)) "tipobrevete"
			,CAST(BREVETE as varchar(18))"brevete"
			,CAST(PASAPORTE as varchar(18)) "pasaporte"
			,NOMBREEMERGENCIA "nombreemergencia"
			,DIRECCIONEMERGENCIA "direccionemergencia"
			,TELEFONOEMERGENCIA "telefonoemergencia"
			,CAST(BANCOMONEDALOCAL as varchar(3)) "bancomonedalocal"
			,CAST(TIPOCUENTALOCAL as varchar(3)) "tipocuentalocal"
			,CUENTAMONEDALOCAL "cuentamonedalocal"
			,CAST(BANCOMONEDAEXTRANJERA as varchar(3)) "bancomonedaextranjera"
			,CAST(TIPOCUENTAEXTRANJERA as varchar(3)) "tipocuentaextranjera"
			,CUENTAMONEDAEXTRANJERA "cuentamonedaextranjera"
			,CAST(PERSONAANT as varchar(15)) "personaant"
			,CORREOELECTRONICO "correoelectronico"
			,CAST(CLASEPERSONACODIGO as varchar(3)) "clasepersonacodigo"
			,CAST(ESTADO  as varchar(1)) "estado"
			,CAST(ULTIMOUSUARIO as varchar(20)) "ultimousuario"
			,ULTIMAFECHAMODIF "ultimafechamodif"
		    ,CAST(ENFERMEDADGRAVEFLAG as varchar(1)) "enfermedadgraveflag"
			,CAST(PROVINCIA as varchar(3)) "provincia"
			,CAST(TARJETADECREDITO as varchar(20)) "tarjetadecredito"
			,CAST(FLAGACTUALIZACION  as varchar(1)) "flagactualizacion"
			,INGRESOFECHAREGISTRO "ingresofecharegistro"
			,CAST(INGRESOAPLICACIONCODIGO as varchar(2)) "ingresoaplicacioncodigo"
			,CAST(INGRESOUSUARIO as varchar(20)) "ingresousuario"
			,CAST(PYMEFLAG as varchar(1)) "pymeflag"
			,CAST(GRUPOEMPRESARIAL as varchar(4)) "grupoempresarial"
			,CAST(CELULAR as varchar(15)) "celular"
			,CAST(CELULAREMERGENCIA as varchar(15)) "celularemergencia"
			,CAST(LUGARNACIMIENTO as varchar(80)) "lugarnacimiento"
			,CAST(PARENTESCOEMERGENCIA as varchar(10)) "parentescoemergencia"
			,CAST(PERSONACLASIFICACION as varchar(8))"personaclasificacion"
			,DIRECCIONREFERENCIA "direccionreferencia"
		    ,CAST(SUNATZONA as varchar(2)) "sunatzona"
			,CAST(SUNATUBIGEO as varchar(10)) "sunatubigeo"
			,CAST(SUNATNACIONALIDAD as varchar(6))"sunatnacionalidad"
			,CAST(SUNATVIA as varchar(2))"sunatvia"
			,cast(SUNATDOMICILIADO as varchar(1)) "sunatdomiciliado"
			,CAST(CODIGOLDN as varchar(3))"codigoldn"
			,CAST(PAISEMISOR as varchar(3)) "paisemisor"
            ,CAST(SUNATNDCONVENIO  as varchar(2)) "sunatndconvenio"
			,CAST(SUNATNDTIPORENTA   as varchar(3))"sunatndtiporenta"
			,CAST(SUNATNDEXONERACION   as varchar(1))"sunatndexoneracion"
			,CAST(SUNATNDSERVICIO   as varchar(1))"sunatndservicio"
		    ,CAST(PAIS  as varchar(4)) "pais"
			,CAST(FLAGSOLICITAUSUARIO  as varchar(1)) "flagsolicitausuario"
			,CARNETEXTRANJERIA_FECVCTO "carnetextranjeriaFecvcto"
			,BREVETE_FECVCTO "breveteFecvcto"
			,CODIGOINTERBANCARIO "codigointerbancario"
         from PERSONAMAST
         where 
			PERSONA = :p_persona
    </sql-query>

	<sql-query name="wfpersonamast.paginadoEmpleadoOtroContar">
		SELECT count(1)
		FROM personamast p
         JOIN empleadomast ON empleadomast.empleado=p.persona
         LEFT JOIN AC_COSTCENTERMST ON AC_COSTCENTERMST.COSTCENTER=EMPLEADOMAST.CENTROCOSTOS
         LEFT JOIN ma_unidadnegocio ON MA_UNIDADNEGOCIO.UNIDADNEGOCIO=EMPLEADOMAST.UNIDADNEGOCIOASIGNADA
         LEFT JOIN AC_SUCURSAL ON  AC_SUCURSAL.SUCURSAL=EMPLEADOMAST.SUCURSAL          
         LEFT JOIN companyowner comp ON comp.companyowner = empleadomast.companiasocio  
         
         LEFT JOIN HR_PUESTOEMPRESA PUE ON empleadomast.CodigoCargo = PUE.CodigoPuesto
		 LEFT JOIN HR_TipoContrato TCN ON empleadomast.TipoContrato = TCN.TipoContrato
		 LEFT JOIN PR_TipoPlanilla TPL ON empleadomast.TipoPlanilla = TPL.TipoPlanilla
		 LEFT JOIN hr_cargosmast CAR ON empleadomast.cargo = CAR.cargo
		 LEFT JOIN departmentmst DEP ON empleadomast.DeptoOrganizacion = DEP.department
		WHERE 1=1
		AND (p.esempleado = 'S' OR p.esotro = 'S')
		AND p.persona = ISNULL(:p_codigo,p.persona)
		AND upper(ISNULL(P.nombrecompleto,'xxx')) LIKE
		upper('%' +
		ISNULL(:p_nombre,ISNULL(P.nombrecompleto,'ISNULL') ) + '%')
		AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento,
		ISNULL(P.documento,'ddd') ) + '%'
		AND ISNULL(p.documentofiscal,'qqq') LIKE
		'%' + ISNULL(:p_docfiscal,
		ISNULL(P.documentofiscal,'qqq') ) + '%'
		AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad,
		ISNULL(P.documentoidentidad,'eee') ) + '%'
		AND p.estado = ISNULL(:p_estado,p.estado)
		AND ISNULL(empleadomast.centrocostos, 'XXX') = ISNULL(:p_centrocosto, ISNULL(empleadomast.centrocostos, 'XXX') )
	</sql-query>

	
	<sql-query name="wfpersonamast.paginadoEmpleadoOtroListar">
        SELECT    CAST(p.persona as int ) as "persona",
               p.busqueda                         AS "busqueda",
               p.nombrecompleto                   AS "nombrecompleto",
               p.nombres                          AS "nombres",
               p.apellidopaterno                  AS "apellidopaterno",
               p.apellidomaterno                  AS "apellidomaterno",
               cast(p.sexo as varchar(5))                             AS "sexo",
               cast(p.tipodocumento  as varchar(5))                  AS "tipodocumento",
               cast(p.tipopersona  as varchar(5))                      AS "tipopersona",
               p.fechanacimiento                  AS "fechanacimiento",
               cast(p.escliente as varchar(5))                        AS "escliente",
               cast(p.esproveedor as varchar(5))                      AS "esproveedor",
               cast(p.esempleado as varchar(5))                       AS "esempleado",
               cast(p.esotro as varchar(5))                          AS "esotro",
               p.documento                        AS "documento",
               p.documentofiscal                  AS "documentofiscal",
               p.documentoidentidad               AS "documentoidentidad",
               p.correoelectronico               AS "correoelectronico",
               cast(p.estado as varchar(5))                           AS "estado",
               CASE WHEN p.estado = 'A' THEN 'Activo'
                 ELSE 'Inactivo' END              AS "estadoNombre",
               
               empleadomast.empleado         	  AS "empleado",  
               empleadomast.codigousuario         AS "codigousuario",
               cast(empleadomast.estadoempleado as varchar(5))        AS "estadoEmpleado",
               empleadomast.centrocostos          AS "centrocostos",               
               empleadomast.unidadnegocioasignada AS "unidadnegocioasignada",
               empleadomast.companiasocio         AS "companiasocio",               
               empleadomast.sucursal              AS "sucursal",               
               empleadomast.fechaingreso          AS "fechaingreso",
               empleadomast.fechainiciocontrato   AS "fechainiciocontrato",
               empleadomast.fechafincontrato      AS "fechafincontrato",
               empleadomast.tipohorario           AS "tipohorario",
               empleadomast.sueldoactuallocal     AS "sueldoactuallocal",
               empleadomast.codigocargo           AS "codigocargo",               
               empleadomast.tipocontrato          AS "tipocontrato",               
               empleadomast.tipoplanilla          AS "tipoplanilla",               
               empleadomast.cargo                 AS "cargo",               
               empleadomast.deptoorganizacion     AS "deptoorganizacion",
               empleadomast.correointerno     	  AS "correointerno",
               
               ma_unidadnegocio.descripcionlocal  AS "unidadnegocioasignadaNombre",
               ac_costcentermst.localname         AS "centrocostosNombre",
               COMP.description                   AS "companiasocioNombre",
               ac_sucursal.descripcionlocal       AS "sucursalnombre",
               pue.descripcion                    AS "codigocargoNombre",
               tcn.descripcion                    AS "tipocontratoNombre",
               tpl.descripcion                    AS "tipoplanillaNombre",
               dep.description                    AS "deptoorganizacionNombre",
               car.descripcionlocal               AS "cargoNombre"
        FROM personamast p
         JOIN empleadomast ON empleadomast.empleado=p.persona
         LEFT JOIN AC_COSTCENTERMST ON AC_COSTCENTERMST.COSTCENTER=EMPLEADOMAST.CENTROCOSTOS
         LEFT JOIN ma_unidadnegocio ON MA_UNIDADNEGOCIO.UNIDADNEGOCIO=EMPLEADOMAST.UNIDADNEGOCIOASIGNADA
         LEFT JOIN AC_SUCURSAL ON  AC_SUCURSAL.SUCURSAL=EMPLEADOMAST.SUCURSAL          
         LEFT JOIN companyowner comp ON comp.companyowner = empleadomast.companiasocio          
         
         LEFT JOIN HR_PUESTOEMPRESA PUE ON empleadomast.CodigoCargo = PUE.CodigoPuesto
		 LEFT JOIN HR_TipoContrato TCN ON empleadomast.TipoContrato = TCN.TipoContrato
		 LEFT JOIN PR_TipoPlanilla TPL ON empleadomast.TipoPlanilla = TPL.TipoPlanilla
		 LEFT JOIN hr_cargosmast CAR ON empleadomast.cargo = CAR.cargo
		 LEFT JOIN departmentmst DEP ON empleadomast.DeptoOrganizacion = DEP.department
	    WHERE 1=1
	    AND (p.esempleado = 'S' OR p.esotro = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.nombrecompleto,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.nombrecompleto,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    AND ISNULL(empleadomast.centrocostos, 'XXX') = ISNULL(:p_centrocosto, ISNULL(empleadomast.centrocostos, 'XXX') )
	    order by p.busqueda
    </sql-query>
	
	<sql-query name="wfpersonamast.obtenerpersonapordtoapi">
		<![CDATA[
		SELECT    CAST(p.persona as int ) as "persona"
	         ,p.busqueda as "busqueda"
	         ,p.nombrecompleto as "nombrecompleto"  
	         ,p.nombres as "nombres"  
			 ,p.ApellidoPaterno as "apellidopaterno"  
			 ,p.ApellidoMaterno as "apellidomaterno"  
			 ,CAST(p.sexo as VARCHAR) as "sexo"
			 ,CAST(p.tipodocumento as VARCHAR) as "tipodocumento"
			 ,CAST(p.tipopersona as VARCHAR) as "tipopersona"
			 ,p.FechaNacimiento as "fechanacimiento"
			 --,p.codigoUsuario as "codigousuario"	         
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esproveedor as VARCHAR) as "esproveedor" 
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
			 ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre"
	         ,p.correoelectronico as "correoelectronico"
             ,p.direccion as "direccion"
			 ,p.telefono as "telefono"
             ,p.pais as "pais"
        FROM personamast p
	    WHERE p.persona = :p_id_persona
		]]>
	</sql-query>
	
	<sql-query name="wfpersonamast.listaRapidaCore">
    <![CDATA[
		SELECT * FROM (
    SELECT CAST(p.persona as int ) as "persona" 
               p.busqueda                         AS "busqueda",
               p.nombrecompleto                   AS "nombrecompleto",
               p.nombres                          AS "nombres",
               p.apellidopaterno                  AS "apellidopaterno",
               p.apellidomaterno                  AS "apellidomaterno",
               p.sexo                             AS "sexo",
               p.tipodocumento                    AS "tipodocumento",
               p.tipopersona                      AS "tipopersona",
               p.fechanacimiento                  AS "fechanacimiento",
               p.codigousuario                    AS "codigousuario",
               p.escliente                        AS "escliente",
               p.esproveedor                      AS "esproveedor",
               p.esempleado                       AS "esempleado",
               p.esotro                           AS "esotro",
               p.documento                        AS "documento",
               p.documentofiscal                  AS "documentofiscal",
               p.documentoidentidad               AS "documentoidentidad",
               p.estado                           AS "estado",
               p.correoelectronico               AS "correoelectronico",
               CASE WHEN p.estado = 'A' THEN 'Activo'
                 ELSE 'Inactivo' END              AS "estadoNombre"
                              
        FROM   personamast p
        WHERE  p.busqueda like '%' + ISNULL(:p_busqueda,p.busqueda) + '%'
               AND p.estado = ISNULL(:p_estado,p.estado)               
    ) WHERE rownum <= 30               
    order by 2
			]]>
  </sql-query>
  
  
    <sql-query name="wfpersonamast.paginadoGestorContar">
  <![CDATA[
        SELECT count(1)
	    FROM personamast p
	    INNER JOIN  wh_requisicioncompradormst  ON wh_requisicioncompradormst.comprador=p.Persona
	    WHERE 1=1
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    AND ( wh_requisicioncompradormst.estado='A'	)
	    ]]>
    </sql-query>    
    
    <sql-query name="wfpersonamast.paginadoGestorListar">
    <![CDATA[
        SELECT   CAST(p.persona as int ) as "persona" 
	         ,p.busqueda as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esproveedor as VARCHAR) as "esproveedor" 
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre",
	         wh_requisicioncompradormst.TipoComprador tipocomprador
	    FROM personamast p
	    INNER JOIN  wh_requisicioncompradormst  ON wh_requisicioncompradormst.comprador=p.Persona
	    WHERE 1=1
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    AND ( wh_requisicioncompradormst.estado='A'	)
	    order by p.busqueda
	    ]]>
    </sql-query>
  
  
  <sql-query name="wfpersonamast.paginadoClienteProveedorOtroContar">
  <![CDATA[
        SELECT count(1)
	    FROM personamast p
	    WHERE 1=1
	    AND (p.escliente = 'S' OR p.esproveedor = 'S' OR p.esotro = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    ]]>
    </sql-query>    
    
    <sql-query name="wfpersonamast.paginadoClienteProveedorOtroListar">
    <![CDATA[
        SELECT   CAST(p.persona as int ) as "persona" 
	         ,p.busqueda as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esproveedor as VARCHAR) as "esproveedor" 
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre"
	    FROM personamast p
	    WHERE 1=1
	    AND (p.escliente = 'S' OR p.esproveedor = 'S' OR p.esotro = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    order by p.busqueda
	    ]]>
    </sql-query>

	<sql-query name="wfpersonamast.listarDtoPorDocumentofiscalCore">
         select 
			CAST(persona as int ) as "persona"  
			,ORIGEN "origen"
			,APELLIDOPATERNO "apellidopaterno"
			,APELLIDOMATERNO "apellidomaterno"
			,NOMBRES "nombres"
			,NOMBRECOMPLETO "nombrecompleto"
			,BUSQUEDA "busqueda"
			,TIPODOCUMENTO "tipodocumento"
			,DOCUMENTO "documento"
			,CODIGOBARRAS "codigobarras"
			,TIPOPERSONAUSUARIO "tipopersonausuario"
			,ESCLIENTE "escliente"
			,ESPROVEEDOR "esproveedor"
			,ESEMPLEADO "esempleado"
			,ESOTRO "esotro"
			,TIPOPERSONA "tipopersona"
			,FECHANACIMIENTO "fechanacimiento"
			,CIUDADNACIMIENTO "ciudadnacimiento"
			,SEXO "sexo"
			,NACIONALIDAD "nacionalidad"
			,ESTADOCIVIL "estadocivil"
			,NIVELINSTRUCCION "nivelinstruccion"
			,DIRECCION "direccion"
			,CODIGOPOSTAL "codigopostal"
			,DEPARTAMENTO "departamento"
			,TELEFONO "telefono"
			,FAX "fax"
			,DOCUMENTOFISCAL "documentofiscal"
			,DOCUMENTOIDENTIDAD "documentoidentidad"
			,CARNETEXTRANJERIA "carnetextranjeria"
			,DOCUMENTOMILITARFA "documentomilitarfa"
			,TIPOBREVETE "tipobrevete"
			,BREVETE "brevete"
			,PASAPORTE "pasaporte"
			,NOMBREEMERGENCIA "nombreemergencia"
			,DIRECCIONEMERGENCIA "direccionemergencia"
			,TELEFONOEMERGENCIA "telefonoemergencia"
			,BANCOMONEDALOCAL "bancomonedalocal"
			,TIPOCUENTALOCAL "tipocuentalocal"
			,CUENTAMONEDALOCAL "cuentamonedalocal"
			,BANCOMONEDAEXTRANJERA "bancomonedaextranjera"
			,TIPOCUENTAEXTRANJERA "tipocuentaextranjera"
			,CUENTAMONEDAEXTRANJERA "cuentamonedaextranjera"
			,PERSONAANT "personaant"
			,CORREOELECTRONICO "correoelectronico"
			,CLASEPERSONACODIGO "clasepersonacodigo"
			,ESTADO "estado"
			,ULTIMOUSUARIO "ultimousuario"
			,ULTIMAFECHAMODIF "ultimafechamodif"
			,CUENTAMONEDALOCAL_TMP "cuentamonedalocalTmp"
			,CUENTAMONEDAEXTRANJERA_TMP "cuentamonedaextranjeraTmp"
			,ENFERMEDADGRAVEFLAG "enfermedadgraveflag"
			,PROVINCIA "provincia"
			,TARJETADECREDITO "tarjetadecredito"
			,FLAGACTUALIZACION "flagactualizacion"
			,INGRESOFECHAREGISTRO "ingresofecharegistro"
			,INGRESOAPLICACIONCODIGO "ingresoaplicacioncodigo"
			,INGRESOUSUARIO "ingresousuario"
			,PYMEFLAG "pymeflag"
			,GRUPOEMPRESARIAL "grupoempresarial"
			,CELULAR "celular"
			,CELULAREMERGENCIA "celularemergencia"
			,LUGARNACIMIENTO "lugarnacimiento"
			,PARENTESCOEMERGENCIA "parentescoemergencia"
			,PERSONACLASIFICACION "personaclasificacion"
			,DIRECCIONREFERENCIA "direccionreferencia"
			,FLAGREPETIDO "flagrepetido"
			,CODDISCAMEC "coddiscamec"
			,FECINIDISCAMEC "fecinidiscamec"
			,FECFINDISCAMEC "fecfindiscamec"
			,CODLICARMA "codlicarma"
			,MARCAARMA "marcaarma"
			,SERIEARMA "seriearma"
			,INICIOARMA "inicioarma"
			,VENCIMIENTOARMA "vencimientoarma"
			,SEGURODISCAMEC "segurodiscamec"
			--,CORRELATIVOSCTR "correlativosctr"
			,SUNATZONA "sunatzona"
			,SUNATUBIGEO "sunatubigeo"
			,SUNATNACIONALIDAD "sunatnacionalidad"
			,SUNATVIA "sunatvia"
			,cast(SUNATDOMICILIADO as varchar2(2)) "sunatdomiciliado"
			,CODIGOLDN "codigoldn"
			,PAISEMISOR "paisemisor"
			,SUNATNDCONVENIO "sunatndconvenio"
			,SUNATNDTIPORENTA "sunatndtiporenta"
			,SUNATNDEXONERACION "sunatndexoneracion"
			,SUNATNDSERVICIO "sunatndservicio"
			,CODIGOUSUARIO "codigousuario"
			,PAIS "pais"
			,FLAGSOLICITAUSUARIO "flagsolicitausuario"
			,CARNETEXTRANJERIA_FECVCTO "carnetextranjeriaFecvcto"
			,BREVETE_FECVCTO "breveteFecvcto"
			,CODIGOINTERBANCARIO "codigointerbancario"
         from PERSONAMAST
         where 
				DOCUMENTOFISCAL = :p_documentofiscal
			and ESTADO = ISNULL(:p_estado,ESTADO)
		 order by Persona desc
    </sql-query>
    
    <sql-query name="wfpersonamast.listarDtoPorDocumentoODocumentofiscalCore">
         select 
			CAST(persona as int ) as "persona"
			,ORIGEN "origen"
			,APELLIDOPATERNO "apellidopaterno"
			,APELLIDOMATERNO "apellidomaterno"
			,NOMBRES "nombres"
			,NOMBRECOMPLETO "nombrecompleto"
			,BUSQUEDA "busqueda"
			,TIPODOCUMENTO "tipodocumento"
			,DOCUMENTO "documento"
			,CODIGOBARRAS "codigobarras"
			,TIPOPERSONAUSUARIO "tipopersonausuario"
			,ESCLIENTE "escliente"
			,ESPROVEEDOR "esproveedor"
			,ESEMPLEADO "esempleado"
			,ESOTRO "esotro"
			,TIPOPERSONA "tipopersona"
			,FECHANACIMIENTO "fechanacimiento"
			,CIUDADNACIMIENTO "ciudadnacimiento"
			,SEXO "sexo"
			,NACIONALIDAD "nacionalidad"
			,ESTADOCIVIL "estadocivil"
			,NIVELINSTRUCCION "nivelinstruccion"
			,DIRECCION "direccion"
			,CODIGOPOSTAL "codigopostal"
			,DEPARTAMENTO "departamento"
			,TELEFONO "telefono"
			,FAX "fax"
			,DOCUMENTOFISCAL "documentofiscal"
			,DOCUMENTOIDENTIDAD "documentoidentidad"
			,CARNETEXTRANJERIA "carnetextranjeria"
			,DOCUMENTOMILITARFA "documentomilitarfa"
			,TIPOBREVETE "tipobrevete"
			,BREVETE "brevete"
			,PASAPORTE "pasaporte"
			,NOMBREEMERGENCIA "nombreemergencia"
			,DIRECCIONEMERGENCIA "direccionemergencia"
			,TELEFONOEMERGENCIA "telefonoemergencia"
			,BANCOMONEDALOCAL "bancomonedalocal"
			,TIPOCUENTALOCAL "tipocuentalocal"
			,CUENTAMONEDALOCAL "cuentamonedalocal"
			,BANCOMONEDAEXTRANJERA "bancomonedaextranjera"
			,TIPOCUENTAEXTRANJERA "tipocuentaextranjera"
			,CUENTAMONEDAEXTRANJERA "cuentamonedaextranjera"
			,PERSONAANT "personaant"
			,CORREOELECTRONICO "correoelectronico"
			,CLASEPERSONACODIGO "clasepersonacodigo"
			,ESTADO "estado"
			,ULTIMOUSUARIO "ultimousuario"
			,ULTIMAFECHAMODIF "ultimafechamodif"
			,CUENTAMONEDALOCAL_TMP "cuentamonedalocalTmp"
			,CUENTAMONEDAEXTRANJERA_TMP "cuentamonedaextranjeraTmp"
			,ENFERMEDADGRAVEFLAG "enfermedadgraveflag"
			,PROVINCIA "provincia"
			,TARJETADECREDITO "tarjetadecredito"
			,FLAGACTUALIZACION "flagactualizacion"
			,INGRESOFECHAREGISTRO "ingresofecharegistro"
			,INGRESOAPLICACIONCODIGO "ingresoaplicacioncodigo"
			,INGRESOUSUARIO "ingresousuario"
			,PYMEFLAG "pymeflag"
			,GRUPOEMPRESARIAL "grupoempresarial"
			,CELULAR "celular"
			,CELULAREMERGENCIA "celularemergencia"
			,LUGARNACIMIENTO "lugarnacimiento"
			,PARENTESCOEMERGENCIA "parentescoemergencia"
			,PERSONACLASIFICACION "personaclasificacion"
			,DIRECCIONREFERENCIA "direccionreferencia"
			,FLAGREPETIDO "flagrepetido"
			,CODDISCAMEC "coddiscamec"
			,FECINIDISCAMEC "fecinidiscamec"
			,FECFINDISCAMEC "fecfindiscamec"
			,CODLICARMA "codlicarma"
			,MARCAARMA "marcaarma"
			,SERIEARMA "seriearma"
			,INICIOARMA "inicioarma"
			,VENCIMIENTOARMA "vencimientoarma"
			,SEGURODISCAMEC "segurodiscamec"
			--,CORRELATIVOSCTR "correlativosctr"
			,SUNATZONA "sunatzona"
			,SUNATUBIGEO "sunatubigeo"
			,SUNATNACIONALIDAD "sunatnacionalidad"
			,SUNATVIA "sunatvia"
			,cast(SUNATDOMICILIADO as varchar2(2)) "sunatdomiciliado"
			,CODIGOLDN "codigoldn"
			,PAISEMISOR "paisemisor"
			,SUNATNDCONVENIO "sunatndconvenio"
			,SUNATNDTIPORENTA "sunatndtiporenta"
			,SUNATNDEXONERACION "sunatndexoneracion"
			,SUNATNDSERVICIO "sunatndservicio"
			,CODIGOUSUARIO "codigousuario"
			,PAIS "pais"
			,FLAGSOLICITAUSUARIO "flagsolicitausuario"
			,CARNETEXTRANJERIA_FECVCTO "carnetextranjeriaFecvcto"
			,BREVETE_FECVCTO "breveteFecvcto"
			,CODIGOINTERBANCARIO "codigointerbancario"
         from PERSONAMAST
         where 
				(DOCUMENTOFISCAL = :p_documentofiscal or DOCUMENTO = :p_xdocumento)
			and ESTADO = ISNULL(:p_estado,ESTADO)
		 order by Persona desc
    </sql-query>
	
	<sql-query name="wfpersonamast.personaestaenunidadnegocio">
         SELECT  CAST(personamast.persona as int ) as "persona" 
		FROM   personamast,
		       ma_personaunidadnegocio
		WHERE  personamast.persona = ma_personaunidadnegocio.persona
		       AND personamast.persona = :p_persona
		       AND ma_personaunidadnegocio.unidadnegocio = :p_unidadnegocio 
    </sql-query>
        
        
   <sql-query name="wfpersonamast.paginadoContarTipoProveedor">
    <![CDATA[
        SELECT   count(*)  FROM (SELECT distinct CAST(p.persona as int ) as "persona" 
	         ,p.busqueda as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre",
	         LTRIM(RTRIM(p.Direccion)) as "direccion",
			 LTRIM(RTRIM(p.Telefono)) as "telefono",
			 LTRIM(RTRIM(p.CorreoElectronico)) as "correoelectronico",
			 
			 LTRIM(RTRIM(p.CorreoElectronicoOtros)) as "correoElectronicoOtros",
			 
			 rtrim(PRO.MonedaPago) as "moneda",
			 rtrim(PRO.FormadePago) as "formapago",
			 rtrim(PRO.TipoServicio) as "tiposervicio",
			 rtrim(PRO.PersonaContacto) as "personaContacto"
	    FROM personamast p
	      LEFT JOIN ProveedorMast PRO on pro.Proveedor= p.Persona
		 LEFT JOIN GP_REGISTROPROVEEDOR ON GP_REGISTROPROVEEDOR.PROVEEDOR=  pro.Proveedor
		 LEFT JOIN Departamento ON Departamento.Departamento = isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO, Departamento.Departamento ) 
		 LEFT JOIN GP_RPACTIVIDADECONOMICA ON GP_RPACTIVIDADECONOMICA.regregistroid= pro.Proveedor
		 LEFT JOIN MA_MaestroMiscelaneoDetalle ON MA_MaestroMiscelaneoDetalle.AplicacionCodigo='GP' AND MaestroCodigo = 'SECTORINDU' and
		 GP_RPACTIVIDADECONOMICA.tipoActividad =MA_MaestroMiscelaneoDetalle.ValorCodigo 
	    WHERE 
	     ( p.esproveedor = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND pro.TipoProveedor = ISNULL(:p_estado,pro.TipoProveedor)
	    and ( p.Estado = 'A' ) 
	   	and (p.busqueda <> '' and p.NombreCompleto <> '')
	   	and (isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO,' ') = isnull(:p_localidad,isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO,' ')))
		and (isnull(GP_RPACTIVIDADECONOMICA.tipoActividad, ' ') = isnull(:p_actividad,isnull(GP_RPACTIVIDADECONOMICA.tipoActividad,' ')))) dw
		  ]]>
    </sql-query>    
    <sql-query name="wfpersonamast.paginadoTipoProveedor">
      <![CDATA[
        SELECT distinct CAST(p.persona as int ) as "persona" 
	         ,p.busqueda as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre",
	         LTRIM(RTRIM(p.Direccion)) as "direccion",
			 LTRIM(RTRIM(p.Telefono)) as "telefono",
			 LTRIM(RTRIM(p.CorreoElectronico)) as "correoelectronico",
			 
			 LTRIM(RTRIM(p.CorreoElectronicoOtros)) as "correoElectronicoOtros",
			 
			 rtrim(PRO.MonedaPago) as "moneda",
			 rtrim(PRO.FormadePago) as "formapago",
			 rtrim(PRO.TipoServicio) as "tiposervicio",
			 rtrim(PRO.PersonaContacto) as "personaContacto"
	    FROM personamast p
	      LEFT JOIN ProveedorMast PRO on pro.Proveedor= p.Persona
		 LEFT JOIN GP_REGISTROPROVEEDOR ON GP_REGISTROPROVEEDOR.PROVEEDOR=  pro.Proveedor
		 LEFT JOIN Departamento ON Departamento.Departamento = isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO, Departamento.Departamento ) 
		 LEFT JOIN GP_RPACTIVIDADECONOMICA ON GP_RPACTIVIDADECONOMICA.regregistroid= pro.Proveedor
		 LEFT JOIN MA_MaestroMiscelaneoDetalle ON MA_MaestroMiscelaneoDetalle.AplicacionCodigo='GP' AND MaestroCodigo = 'SECTORINDU' and
		 GP_RPACTIVIDADECONOMICA.tipoActividad =MA_MaestroMiscelaneoDetalle.ValorCodigo 
	    WHERE 
	     ( p.esproveedor = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND pro.TipoProveedor = ISNULL(:p_estado,pro.TipoProveedor)
	    and ( p.Estado = 'A' ) 
	   	and (p.busqueda <> '' and p.NombreCompleto <> '')
	    and (isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO,' ') = isnull(:p_localidad,isnull(GP_REGISTROPROVEEDOR.REPRESENTANTEDEPARTAMENTO,' ')))
		and (isnull(GP_RPACTIVIDADECONOMICA.tipoActividad, ' ') = isnull(:p_actividad,isnull(GP_RPACTIVIDADECONOMICA.tipoActividad,' ')))
	    order by p.Busqueda asc	    
	    ]]>
    </sql-query>
    
    
    <sql-query name="wfpersonamast.paginadoProveedorContar">
  <![CDATA[
        SELECT count(1)
	    FROM personamast p
	    WHERE 1=1
	    AND ( p.esproveedor = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    ]]>
    </sql-query>    
    
    <sql-query name="wfpersonamast.paginadoProveedorListar">
    <![CDATA[
        SELECT   CAST(p.persona as int ) as "persona" 
	         ,rtrim(p.busqueda) as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esproveedor as VARCHAR) as "esproveedor" 
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,rtrim(p.documento) as "documento" 
	         ,rtrim(p.documentofiscal) as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre",
	         rtrim(p.telefono) as "telefono",
	         rtrim(p.fax) as "fax",
	         rtrim(p.correoelectronico) as "correoelectronico"
	    FROM personamast p
	    WHERE 1=1
	    AND (p.esproveedor = 'S')
	    AND p.persona = ISNULL(:p_codigo,p.persona)
	    AND upper(ISNULL(P.busqueda,'xxx')) LIKE upper('%' + ISNULL(:p_nombre,ISNULL(P.busqueda,'ISNULL') ) + '%')
	    AND ISNULL(p.documento,'ddd') LIKE '%' + ISNULL(:p_documento, ISNULL(P.documento,'ddd') ) + '%'
	    AND ISNULL(p.documentofiscal,'qqq') LIKE '%' + ISNULL(:p_docfiscal, ISNULL(P.documentofiscal,'qqq') ) + '%'
	    AND ISNULL(p.documentoidentidad,'eee') LIKE '%' + ISNULL(:p_docidentidad, ISNULL(P.documentoidentidad,'eee') ) + '%'
	    AND p.estado = ISNULL(:p_estado,p.estado)
	    and (p.busqueda <> '' and p.NombreCompleto <> '')
	    order by p.busqueda
	    ]]>
    </sql-query>
    
    <sql-query name="wfpersonamast.obtenerParametroFotos">
	<![CDATA[
		select '1' as "codigo"
		,(select Texto from ParametrosMast where ParametroClave='EXTARCHFOT') as "extension"
		,(select Texto from ParametrosMast where ParametroClave='BMPCODIGO') as "tipo"
		,(select DescripcionParametro from ParametrosMast where ParametroClave='PATHBITMAP') as "ruta"
		,(select DescripcionParametro from ParametrosMast where ParametroClave='WEBRBITMAP') as "rutaweb" 
	]]>
	</sql-query>
	
	
	
	<sql-query name="wfpersonamast.obtenerTipoProveedor">
      <![CDATA[
        SELECT   CAST(p.persona as int ) as "persona" 
	         ,p.busqueda as "busqueda"  
	         ,p.nombrecompleto  AS "nombrecompleto"
	         ,CAST(p.escliente as VARCHAR) as "escliente"
	         ,CAST(p.esempleado as VARCHAR) as "esempleado" 
	         ,CAST(p.esotro as VARCHAR) as "esotro"
	         ,p.documento as "documento" 
	         ,p.documentofiscal as "documentofiscal" 
	         ,p.documentoidentidad as "documentoidentidad"
	         ,CAST(p.estado as VARCHAR) as "estado"
	          ,case when p.estado='A' then 'Activo'
	         else 'Inactivo' end as "estadoNombre",
	         LTRIM(RTRIM(p.Direccion)) as "direccion",
			 LTRIM(RTRIM(p.Telefono)) as "telefono",
			 LTRIM(RTRIM(p.CorreoElectronico)) as "correoelectronico",
			 rtrim(PRO.MonedaPago) as "moneda",
			 rtrim(PRO.FormadePago) as "formapago",
			 rtrim(PRO.TipoServicio) as "tiposervicio",
			 rtrim(PRO.PersonaContacto) as "personaContacto"
	    FROM personamast p
	     LEFT JOIN ProveedorMast PRO on pro.Proveedor= p.Persona
	    WHERE 1=1
	    AND p.persona = ISNULL(:p_codigo,p.persona)	    	   
	    ]]>
    </sql-query>
    
	<sql-query name="wfpersonamast.selectoremplistar">
		SELECT
		P.PERSONA as "codigo",
		P.BUSQUEDA as "busqueda",
		P.DOCUMENTO as "documento",
		P.CORREOELECTRONICO as "correoelectronico",
		E.CORREOINTERNO as "correointerno"
		FROM PERSONAMAST P
		LEFT JOIN EMPLEADOMAST E ON P.PERSONA=E.EMPLEADO
		WHERE E.ESTADOEMPLEADO = '0'
		AND UPPER(P.BUSQUEDA) Like '%' + ISNULL(UPPER(:p_busqueda) ,
		UPPER(P.BUSQUEDA)) + '%'
		AND P.DOCUMENTO = ISNULL(:p_documento,P.DOCUMENTO)
		AND ( P.CORREOELECTRONICO IS NOT NULL
		OR E.CORREOINTERNO IS NOT NULL)
		ORDER BY P.BUSQUEDA
	</sql-query>

	<sql-query name="wfpersonamast.selectorempcontar">
	SELECT 
	COUNT(*)
	FROM PERSONAMAST P
	LEFT JOIN EMPLEADOMAST E ON P.PERSONA=E.EMPLEADO
	WHERE
	E.ESTADOEMPLEADO = '0'
	AND UPPER(P.BUSQUEDA) Like '%' +
	ISNULL(UPPER(:p_busqueda) ,
	UPPER(P.BUSQUEDA)) + '%'
	AND P.DOCUMENTO = ISNULL(:p_documento,P.DOCUMENTO)
	AND ( P.CORREOELECTRONICO IS NOT NULL
	OR
	E.CORREOINTERNO IS NOT NULL)
	</sql-query>
	
	
    
</hibernate-mapping>
